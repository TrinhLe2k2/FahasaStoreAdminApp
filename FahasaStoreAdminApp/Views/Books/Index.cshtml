@using FahasaStoreAdminApp.Entities
@using FahasaStoreAdminApp.Models.CustomModels
@model IEnumerable<FahasaStoreAdminApp.Entities.Book>

@{
    ViewData["Title"] = "Quản lý sách";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["ActiveSidebar"] = 4;
    ViewData["UrlCurrent"] = "/Books/Index";
    var ActiveID = TempData["ActiveID"] as int?;
    var pageData = ViewData["PageData"] as PaginatedBooksVM;
}
@{
    if (ActiveID != null)
    {
        <a href="/Books/Details" id="DetailsID_@ActiveID" IdValue="@ActiveID" onclick="HandlerCRUD(this, event)"></a>
        @section Scripts {
        <script>
            $(document).ready(function () {
                $('#DetailsID_@ActiveID').click();
                });
            </script>
        }
    }
}

<partial name="_ToastrMessage"/>

<a href="/Books/Create" class="btn btn-primary mb-3" onclick="HandlerCRUD(this, event)">
    Create New
</a>
<table class="table">
    <thead>
        <tr>
            <th>
                    @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DiscountPercentage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    <a href="/Books/Details" IdValue="@item.Id" onclick="HandlerCRUD(this, event)">@item.Name</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DiscountPercentage)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    <a href="/Books/Edit" IdValue="@item.Id" onclick="HandlerCRUD(this, event)"><i class="bi bi-pencil"></i></a> |
                    <a href="/Books/Delete" IdValue="@item.Id" onclick="HandlerCRUD(this, event)"><i class="bi bi-trash3"></i></a>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (pageData != null)
{
    <ul class="pagination justify-content-end mb-0">
        <li class="page-item @(pageData.PageNumber == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = 1 })">First</a>
        </li>
        <li class="page-item @(pageData.PageNumber == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = pageData.PageNumber - 1 })">Previous</a>
        </li>

        @for (int i = pageData.StartPage; i <= pageData.EndPage; i++)
        {
            <li class="page-item @(pageData.PageNumber == i ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
            </li>
        }

        <li class="page-item @(pageData.PageNumber == pageData.PageCount ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = pageData.PageNumber + 1 })">Next</a>
        </li>
        <li class="page-item @(pageData.PageNumber == pageData.PageCount ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = pageData.PageCount })">Last</a>
        </li>
    </ul>
}
