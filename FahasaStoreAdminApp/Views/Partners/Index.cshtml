@using FahasaStoreAdminApp.Models.DTO
@model IEnumerable<PartnerDTO>

@{
    ViewData["Title"] = "Quản lý đối tác";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["ActiveSidebar"] = 7;
    ViewData["UrlCurrent"] = "/Partners/Index";

    var PartnerTypes = ViewData["PartnerTypes"] as List<PartnerTypeDTO>;

    var filters = ViewData["Filters"] as Dictionary<string, string> ?? new Dictionary<string, string>();
    ViewData["Action"] = "Index";
    ViewData["Controller"] = "Partners";
}
<partial name="_ToastrMessage" />
<div class="d-flex justify-content-between">
    <a href="/Partners/Create" class="btn btn-primary mb-3" onclick="HandlerCRUD(this, event)">
        Create New
    </a>
    <div>
        @if (PartnerTypes != null)
        {
            <form id="filter-form" method="get" action="/Partners/Index">
                <div class="input-group">
                    <select class="form-select" name="filters[PartnerTypeId]" onchange="handleSelectedChange(this, event)">
                        <option value="0">--Tất cả lựa chọn--</option>
                        @foreach (var item in PartnerTypes)
                        {
                            var selected = filters.ContainsKey("PartnerTypeId") && filters["PartnerTypeId"] == item.Id.ToString() ? "selected" : "";
                            if (selected == "selected")
                            {
                                <option value="@item.Id" selected>@item.Name</option>
                            }
                            else
                            {
                                <option value="@item.Id">@item.Name</option>
                            }
                        }
                    </select>
                    <a href="/Partners/Create" class="btn btn-outline-secondary" onclick="HandlerCRUD(this, event)">Thêm Đối Tác</a>
                </div>
            </form>
        }
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PartnerType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ImageUrl)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @item.PartnerType?.Name
                </td>
                <td>
                    <a href="/Partners/Details" IdValue="@item.Id" onclick="HandlerCRUD(this, event)">@item.Name</a>
                </td>
                <td>
                    <img src="@item.ImageUrl" alt="Image" width="50" height="50" class="object-fit-contain" />
                </td>
                <td>
                    <a href="/Partners/Edit" IdValue="@item.Id" onclick="HandlerCRUD(this, event)"><i class="bi bi-pencil"></i></a> |
                    <a href="/Partners/Delete" IdValue="@item.Id" onclick="HandlerCRUD(this, event)"><i class="bi bi-trash3"></i></a>
                </td>
            </tr>
        }
    </tbody>
</table>

<partial name="_Paginated" />