@using FahasaStoreAdminApp.Models.DTO
@model IEnumerable<FahasaStoreAdminApp.Models.DTO.SubcategoryDTO>

@{
    ViewData["Title"] = "Quản lý Thể loại con";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["ActiveSidebar"] = 7;
    ViewData["UrlCurrent"] = "/Subcategories/Index";

    var categories = ViewData["Categories"] as List<CategoryDTO>;

    var filters = ViewData["Filters"] as Dictionary<string, string> ?? new Dictionary<string, string>();
    ViewData["Action"] = "Index";
    ViewData["Controller"] = "Subcategories";
}
<partial name="_ToastrMessage" />
<div class="d-flex justify-content-between">
    <a href="/Subcategories/Create" class="btn btn-primary mb-3" onclick="HandlerCRUD(this, event)">
        Create New
    </a>
    <div>
        @if (categories != null)
        {
            <form id="filter-form" method="get" action="/Subcategories/Index">
                <div class="input-group">
                    <select class="form-select" name="filters[CategoryId]" onchange="handleSelectedChange(this, event)">
                        <option value="0">--Tất cả lựa chọn--</option>
                        @foreach (var item in categories)
                        {
                            var selected = filters.ContainsKey("CategoryId") && filters["CategoryId"] == item.Id.ToString() ? "selected" : "";
                            if (selected == "selected")
                            {
                                <option value="@item.Id" selected>@item.Name</option>
                            }
                            else
                            {
                                <option value="@item.Id">@item.Name</option>
                            }
                        }
                    </select>
                    <a href="/Categories/Create" class="btn btn-outline-secondary" onclick="HandlerCRUD(this, event)">Thêm Thể Loại</a>
                </div>
            </form>
        }
    </div>
</div>
<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Id)</th>
            <th>@Html.DisplayNameFor(model => model.Category)</th>
            <th>@Html.DisplayNameFor(model => model.Name)</th>
            <th>@Html.DisplayNameFor(model => model.ImageUrl)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Id)</td>
                <td>@item.Category?.Name</td>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td><img src="@item.ImageUrl" alt="Image" width="50" height="50" class="object-fit-contain" /></td>
                <td>
                    <a href="/Subcategories/Edit" IdValue="@item.Id" onclick="HandlerCRUD(this, event)"><i class="bi bi-pencil"></i></a> |
                    <a href="/Subcategories/Delete" IdValue="@item.Id" onclick="HandlerCRUD(this, event)"><i class="bi bi-trash3"></i></a>
                </td>
            </tr>
        }
    </tbody>
</table>
<partial name="_Paginated" />

